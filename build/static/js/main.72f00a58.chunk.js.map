{"version":3,"sources":["components/ComponentStyles.module.css","util/WikiApi.js","components/WikiDoor.js","components/WikiRoom.js","components/WikiExplorer.js","index.js"],"names":["module","exports","WikiApi","link","status","params","result","getPage","title","a","setRandomQuery","getQuery","getRandomQueryTitle","setListQuery","links","filterLinks","getListQueryPages","getMoreLinks","action","list","rnnamespace","rnlimit","origin","format","$","ajax","url","type","data","console","log","batchcomplete","plcontinue","continue","getQueryInfo","query","random","linkObjects","pages","i","length","push","prop","titles","formatversion","pllimit","includes","pop","isComplete","Title","props","Box","margin","height","width","Text","textAlign","WikiDoor","state","generateColor","this","DoorCrown","DoorLight","DoorFrame","onClick","doorClicked","colors","Component","DoorDoor","className","Math","floor","DoorDoorStyled","style","backgroundColor","doorColor","borderColor","doorColor2","Styled","div","b","c","doorColor3","WikiRoom","getColumns","pageSize","Grid","allign","horizontal","columns","map","index","padding","key","handleDoorClick","WikiExplorer","theme","global","brand","ative","focus","back","font","family","size","breakpoints","value","render","Grommet","ResponsiveContext","Consumer","fill","background","Heading","onScroll","handlScroll","componentDidMount","window","addEventListener","handleScroll","loadRandomPage","newState","scrollTo","setState","event","element","target","scrollingElement","scrollHeight","scrollTop","clientHeight","newLinks","oldLinks","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f00a58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WikiDoorCrown\":\"ComponentStyles_WikiDoorCrown__3uj24\",\"WikiDoorFrame\":\"ComponentStyles_WikiDoorFrame__R9Hda\",\"WikiDoorDoor\":\"ComponentStyles_WikiDoorDoor__2PWNY\",\"door1\":\"ComponentStyles_door1__1Uqw6\",\"door2\":\"ComponentStyles_door2__3cVcf\"};","import $ from 'jquery';\r\n\r\nconst INITIALIZED = 0;\r\nconst QUERYING = 1;\r\nconst CONTINUE = 2;\r\nconst COMPLETE = 3;\r\nconst ERROR = 4;\r\n\r\n/** TODO: pages w Wikipedia:Stub should be removed? they loop w eachother\r\n *      pages w Wikipedia:Redirect need to be hand\r\n *      https://en.wikipedia.org/wiki/KKHJ-LP has results on links that are not good\r\n *      https://en.wikipedia.org/wiki/Response_regulator has links that are a single long word (too wide 16 char)\r\n */\r\nlet WikiApi = {\r\n    link: \"http://en.wikipedia.org/w/api.php\",\r\n    status: INITIALIZED,\r\n    params: null,\r\n    result: null,\r\n    \r\n    getPage: async (title) => {\r\n      if(title === null){\r\n        WikiApi.setRandomQuery();\r\n        await WikiApi.getQuery();\r\n        title = WikiApi.getRandomQueryTitle();\r\n      }\r\n\r\n      WikiApi.setListQuery(title);\r\n      await WikiApi.getQuery();\r\n      let links = WikiApi.filterLinks(WikiApi.getListQueryPages());\r\n\r\n      return {title: title, links: links}\r\n    },\r\n\r\n    getMoreLinks: async () => {\r\n      await WikiApi.getQuery();\r\n      let links = WikiApi.filterLinks(WikiApi.getListQueryPages())\r\n      return links;\r\n    },\r\n\r\n    setRandomQuery: () => {\r\n      WikiApi.status = INITIALIZED;\r\n      WikiApi.params =  {\r\n        action: \"query\",\r\n        list: \"random\",\r\n        rnnamespace: \"0\",\r\n        rnlimit: \"1\",\r\n        origin: \"*\",\r\n        format: \"json\"\r\n      }\r\n    },\r\n\r\n    getQuery: async () => {\r\n      if(WikiApi.status === COMPLETE) return;\r\n\r\n      try{\r\n        WikiApi.status = QUERYING;\r\n        WikiApi.result = await $.ajax({\r\n          url: WikiApi.link,\r\n          type: 'POST',\r\n          data: WikiApi.params\r\n        });\r\n      }\r\n      catch(error){\r\n        WikiApi.status = ERROR;\r\n        console.log(error);\r\n      }\r\n\r\n      //If the query has no more results \r\n      let result = WikiApi.result;\r\n      if(result.batchcomplete ){\r\n        WikiApi.status = COMPLETE;\r\n      }\r\n      else{\r\n        WikiApi.status = CONTINUE;\r\n        WikiApi.params.plcontinue = result.continue.plcontinue;\r\n      }      \r\n    },\r\n\r\n    getQueryInfo: () => {\r\n      return WikiApi.result;//.query.random[0];\r\n    },\r\n\r\n    getRandomQueryTitle: () => {\r\n      return WikiApi.result.query.random[0].title;\r\n    },\r\n\r\n    getListQueryPages: () => {\r\n      let linkObjects = WikiApi.result.query.pages[0].links;\r\n      let pages = [];\r\n      for(let i = 0; i < linkObjects.length; i++){\r\n        pages.push(linkObjects[i].title);\r\n      }\r\n      return pages;\r\n    },\r\n    \r\n    setListQuery : (title) => {\r\n      WikiApi.status = INITIALIZED;\r\n      WikiApi.params = {\r\n        action: \"query\",\r\n        prop: \"links\",\r\n        titles: title,\r\n        formatversion: \"2\",\r\n        pllimit:\"50\",            //Only one page is request at a time\r\n        origin: \"*\",\r\n        format: \"json\"\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This function removes page titles from a list of page titles. These removed\r\n     * pages are not articles and \r\n     * @param {*} links An array of wikipedia page titles\r\n     * @returns An array of wikipedia article titles, filtered from the page titles \r\n     */\r\n    filterLinks: (links) =>{\r\n      //Check from back of list since these unwanted pages always appear at the end \r\n      for(let i = links.length - 1; i >= 0; i--){\r\n          if(links[i].includes(\":\")){\r\n              console.log(\"Popping: \" + links[i]);\r\n              links.pop();\r\n          }\r\n          else{\r\n              break;\r\n          }\r\n      }\r\n      return links; \r\n    },\r\n\r\n\r\n    isComplete: () => {\r\n      if(WikiApi.status === COMPLETE) return true;\r\n      return false;\r\n    }\r\n}\r\n\r\nexport default WikiApi;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Box, Text } from 'grommet';\r\nimport Styled from 'styled-components';\r\nimport ComponentStyles from './ComponentStyles.module.css';\r\n\r\nlet Title = (props) => {\r\n  return (\r\n    <Box \r\n      margin='auto'\r\n      height='15%'\r\n      width='100%'\r\n      >\r\n      <Text textAlign='center' margin='auto'>{props.title}</Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\n// let Door = (props) => {\r\n//   return(\r\n//     <Box>\r\n      \r\n//     </Box>\r\n//   )\r\n// }\r\n\r\n\r\nclass WikiDoor extends Component {\r\n  state = generateColor();\r\n  render(){\r\n    return (\r\n        <Box\r\n          height='wikiDoor-height'\r\n          width='wikiDoor-width'\r\n          margin='auto'>\r\n            <Title title={this.props.title}></Title>\r\n            <DoorCrown>\r\n              <DoorLight/>\r\n            </DoorCrown>\r\n            <DoorFrame onClick={this.props.doorClicked}>\r\n              <DoorDoor colors={this.state}></DoorDoor>\r\n            </DoorFrame>\r\n        </Box>\r\n    )\r\n  }\r\n}\r\n\r\nclass DoorDoor extends Component {\r\n  \r\n  state = {className:  `door${Math.floor(Math.random() * 8) + 1}`}\r\n\r\n  render(){\r\n    console.log(this.state.className);\r\n    return(\r\n      <DoorDoorStyled className={this.state.className} style={{\r\n        backgroundColor: this.props.colors.doorColor,\r\n        borderColor: this.props.colors.doorColor2}}>\r\n      </DoorDoorStyled>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet DoorCrown = Styled.div`\r\n  height: 5%;\r\n  width: 100%;\r\n  display: block;\r\n  background-color: #636363;\r\n  clip-path: polygon(0% 103%, 10% 30%, 28% 60%, 40% 0%, 60% 0%, 72% 60%, 90% 30%, 100% 103%);\r\n`\r\nlet DoorLight = Styled.div`\r\n  width: 15px;\r\n  height: 15px;\r\n  position: relative;\r\n  background-color: #dd2b2b;\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-width: 2px;\r\n  order-style: solid;\r\n  border-color: #701515;\r\n`\r\n\r\nlet DoorFrame = Styled.div`\r\n  height: 85%;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  border-color: #636363;\r\n  border-style: solid;\r\n  border-width: 10px;\r\n  background-color: #333333;\r\n\r\n  &:hover div {\r\n    transform: perspective(2000px) translateZ(0px)  translateX(-1px) translateY(-1px) rotateY(-45deg);\r\n  }\r\n`\r\n\r\nlet DoorDoorStyled = Styled.div`\r\n  background-repeat:no-repeat;\r\n  background-size:contain;\r\n  border-style: solid;\r\n  border-width: 5px;\r\n  transform: translateX(-1px) translateY(-1px);\r\n  transform-origin: left;\r\n  width: 101%;\r\n  height: 101%;\r\n  transition: all 0.1s ease-in-out\r\n`\r\n\r\nlet generateColor = () => {\r\n  let a = Math.floor(Math.random() * 11 + 90);\r\n  let b = Math.floor(Math.random() * 11 + 50);\r\n  let c = Math.floor(Math.random() * 356);\r\n\r\n  let color1 = `hsl(${c}, ${a}%, ${b}%)`\r\n  let color2 = `hsl(${c}, ${a}%, ${100 - b}%)`\r\n  let color3 = `hsl(${c}, ${a}%, ${((100 - b) + b) /2}%)`\r\n  return {doorColor: color1, doorColor2: color2, doorColor3: color3}\r\n}\r\n\r\nexport default WikiDoor;\r\n","import React, { Component } from 'react';\r\nimport { Grid } from 'grommet';\r\nimport WikiDoor from './WikiDoor';\r\n\r\nclass WikiRoom extends Component {\r\n  getColumns = () => {\r\n    switch(this.props.pageSize) {\r\n      case '5-door':\r\n        return ['1/5', '1/5', '1/5',  '1/5', '1/5'];\r\n      case '4-door':\r\n        return ['1/4', '1/4', '1/4',  '1/4'];\r\n      case '3-door':\r\n        return ['1/3', '1/3', '1/3'];\r\n      case '2-door':\r\n        return ['1/2', '1/2'];\r\n      case '1-door':\r\n        return ['1/1'];\r\n    }\r\n  }\r\n  render(){\r\n\r\n    return(\r\n      <Grid\r\n        allign='center'\r\n        margin={{horizontal: '6.9%'}}\r\n        columns={this.getColumns()}>\r\n        {this.props.links.map((title, index) => {\r\n          return (<WikiDoor\r\n            padding='auto'\r\n            title={title} \r\n            key={title}\r\n            doorClicked={() => {this.props.handleDoorClick(title)}} />)\r\n      })}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WikiRoom;\r\n","import React, { Component } from 'react';\r\nimport { Box, Button, Heading, Grommet, ResponsiveContext } from 'grommet';\r\nimport { Notification, FormRefresh } from 'grommet-icons';\r\nimport WikiApi from '../util/WikiApi';\r\nimport WikiRoom from './WikiRoom';\r\n\r\n// const AppBar = (props) => (\r\n//       <Box\r\n//         tag='header'\r\n//         direction='row'\r\n//         align='center'\r\n//         justify='between'\r\n//         background='brand'\r\n//         pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n//         elevation='large'\r\n//         style={{ zIndex: '1' }}\r\n//         {...props}\r\n//       />\r\n//     );  \r\n\r\nclass WikiExplorer extends Component {\r\n    constructor(props){\r\n         super(props);\r\n    }\r\n\r\n    state = {\r\n      title: \"\",        //Title of the current room\r\n      links: [],         //A list of the doors that exist in this room \r\n    }\r\n\r\n    theme = {\r\n        global: {\r\n          colors: {\r\n            brand: '#228BE6',\r\n            ative: '#00FFFFFF',\r\n            focus: '#00FFFFFF',\r\n            back: '#c7aad4'\r\n          },\r\n          font: {\r\n            family: 'Noto Sans, sans-serif',\r\n            size: '18px',\r\n            height: '20px',\r\n          },\r\n          size: {\r\n            '1/1': '100%',\r\n            '1/5': '20%',\r\n            'wikiDoor-height': '450px',\r\n            'wikiDoor-width': '200px'\r\n          },\r\n          breakpoints: {\r\n            'small': {value: 0},\r\n            'medium': {value: 1},\r\n            '1-door': {value : 480},\r\n            '2-door': {value : 820},\r\n            '3-door': {value : 980},\r\n            '4-door': {value : 1280},\r\n            '5-door': {value : 1690},\r\n          },\r\n        }\r\n    };\r\n    \r\n\r\n    render = () => {\r\n        return(\r\n            <Grommet theme={this.theme}>\r\n            <ResponsiveContext.Consumer>\r\n                {size => (\r\n                    <Box fill background={{'color': 'back'}}>\r\n                    <Heading  margin='auto' textAlign='center'>{this.state.title}</Heading>\r\n                    <WikiRoom \r\n                        pageSize={size}\r\n                        links={this.state.links} \r\n                        handleDoorClick={this.handleDoorClick}\r\n                        onScroll={this.handlScroll}/>\r\n                      <Box height='100px'></Box>\r\n                    </Box>\r\n                    \r\n                )} \r\n            </ResponsiveContext.Consumer>\r\n            </Grommet>\r\n        )\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n        window.addEventListener('scroll', this.handleScroll,true);\r\n        this.loadRandomPage();\r\n    }\r\n\r\n    /**\r\n     * This function takes the user to the room this door is for\r\n     * @param {*} title The name of the article the door is attributed to\r\n     */\r\n    handleDoorClick = async (title) => {\r\n        let newState = await WikiApi.getPage(title);\r\n        window.scrollTo(0, 0);\r\n        this.setState(newState);\r\n    }  \r\n\r\n    \r\n    /**\r\n     * This function loads more doors when the user scrolls to the bottom of the page \r\n     * @param {*} event the scroll event \r\n     */\r\n    handleScroll = async  (event) => {\r\n        let element = event.target.scrollingElement; \r\n        if (element.scrollHeight - element.scrollTop < element.clientHeight + 1) {\r\n            console.log(\"BOTTOM\");\r\n            if(WikiApi.isComplete()) return;\r\n            const newLinks = await WikiApi.getMoreLinks();\r\n            const oldLinks = [...this.state.links];\r\n            this.setState({links: [...oldLinks, ...newLinks]})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the state of the app to be a new page\r\n     */\r\n    loadRandomPage = async () => {\r\n        let newState = await WikiApi.getPage(null);\r\n        this.setState(newState);\r\n    }\r\n        \r\n    /**\r\n     * This funtion takes a list of Wikipedia pages and returns a list of links\r\n     * that \r\n     * @param {*} links A list of WikiPedia page articles\r\n     */\r\n    filterLinks =  (links) =>{\r\n        //Check from back of list since these unwanted pages always appear at the end \r\n        for(let i = links.length - 1; i >= 0; i--){\r\n            if(links[i].includes(\":\")){\r\n                console.log(\"Popping: \" + links[i]);\r\n                links.pop();\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n        return links; \r\n      }\r\n\r\n}\r\n\r\nexport default WikiExplorer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WikiExplorer from './components/WikiExplorer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WikiExplorer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}